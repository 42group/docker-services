version: "3.3"
services:
# ============================================================================ #
# ================================ AUTHELIA ================================== #
# ============================================================================ #
  authelia-database:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: authelia
      POSTGRES_USER: authelia
    volumes:
      - authelia-database:/var/lib/postgresql/data
    networks:
      - authelia-backend

  authelia-redis:
    image: redis
    restart: unless-stopped
    networks:
      - authelia-backend

  authelia:
    image: authelia/authelia
    depends_on:
      - authelia-database
      - authelia-redis
    environment:
      AUTHELIA_DEFAULT_REDIRECTION_URL: https://${BASE_DOMAIN}
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/JWT_SECRET
      AUTHELIA_NOTIFIER_SMTP_USERNAME: ${SMTP_USERNAME}
      AUTHELIA_NOTIFIER_SMTP_SENDER: "Valfur Authelia <${AUTHELIA_SYSTEM_EMAIL}>"
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/NOTIFIER_PASSWORD
      AUTHELIA_NOTIFIER_SMTP_HOST: ${SMTP_HOST}
      AUTHELIA_NOTIFIER_SMTP_TLS_SERVER_NAME: ${SMTP_HOST}
      AUTHELIA_SESSION_DOMAIN: ${BASE_DOMAIN}
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/SESSION_SECRET
      AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE: /run/secrets/STORAGE_PASSWORD
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /run/secrets/STORAGE_ENCRYPTION_KEY
    volumes:
      - ./authelia/config:/config
    networks:
      - authelia-backend
      - proxy
    secrets: [JWT_SECRET, NOTIFIER_PASSWORD, SESSION_SECRET, STORAGE_PASSWORD, STORAGE_ENCRYPTION_KEY]
    expose:
      - 9091
    labels:
      - "traefik.http.routers.authelia.rule=Host(`auth.${BASE_DOMAIN}`)"
      - "traefik.http.routers.authelia.tls=true"
      - "traefik.http.routers.authelia.tls.certresolver=letsencrypt"
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
      - "traefik.enable=true"
    restart: unless-stopped
# ============================================================================ #
# ================================== GRAFANA ================================= #
# ============================================================================ #
  prometheus:
    build: prometheus
    networks:
      - proxy #delete
      - metrics
      - seedbox-metrics
    labels: # delete
      - "traefik.http.routers.prom.rule=Host(`prom.${BASE_DOMAIN}`)"
      - "traefik.http.routers.prom.tls=true"
      - "traefik.http.routers.prom.tls.certresolver=letsencrypt"
      - "traefik.http.services.prom.loadbalancer.server.port=9090"
      - "traefik.enable=true"
    restart: unless-stopped
  grafana:
    image: grafana/grafana-oss
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - metrics
      - proxy
    restart: unless-stopped
    labels:
      - "traefik.http.routers.grafana.rule=Host(`metrics.${BASE_DOMAIN}`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.enable=true"
# ============================================================================ #
# ================================= NEXCTLOUD ================================ #
# ============================================================================ #
  nextcloud-database:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed
    volumes:
      - nextcloud-database:/var/lib/mysql
    env_file:
      - .env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
    networks:
      - nextcloud-backend
    restart: unless-stopped

  nextcloud-redis:
    image: redis:6.2.6-alpine3.14
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - nextcloud-backend

  nextcloud-app:
    image: nextcloud:fpm
    depends_on:
      - nextcloud-database
      - nextcloud-redis
    volumes:
      - nextcloud-data:/var/www/html
      - /data/media:/media:ro
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_HOST: nextcloud-database
      REDIS_HOST: nextcloud-redis
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.${BASE_DOMAIN}
    networks:
      - nextcloud-backend
    restart: unless-stopped

  nextcloud-web:
    build: nextcloud
    depends_on:
      - nextcloud-app
    volumes:
      - nextcloud-data:/var/www/html
      - /data/media:/media:ro
    networks:
      - nextcloud-backend
      - proxy
    labels:
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${BASE_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.enable=true"
    restart: unless-stopped

# ============================================================================ #
# ================================== SEEDBOX ================================= #
# ============================================================================ #
  vpn:
    image: dperson/openvpn-client:latest
    devices:
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    volumes:
      - ./seedbox/openvpn:/vpn:ro
    ports:
      - 51413:51413/tcp
      - 51413:51413/udp
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    logging:
      options:
        max-size: "2m"
        max-file: "3"
    environment:
      - FIREWALL
      - TZ=Europe/Paris
    networks:
      - proxy
      - seedbox-indexer
      - seedbox-metrics
      - seedbox-torrenting
    labels:
      - "traefik.http.routers.joal.rule=Host(`joal.${BASE_DOMAIN}`)"
      - "traefik.http.routers.joal.service=joal"
      - "traefik.http.routers.joal.tls=true"
      - "traefik.http.routers.joal.tls.certresolver=letsencrypt"
      - "traefik.http.routers.joal.middlewares=authelia@docker"
      - "traefik.http.services.joal.loadbalancer.server.port=4494"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${BASE_DOMAIN}`)"
      - "traefik.http.routers.transmission.service=transmission"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.transmission.middlewares=authelia@docker"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${BASE_DOMAIN}`)"
      - "traefik.http.routers.jackett.service=jackett"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.tls.certresolver=letsencrypt"
      - "traefik.http.routers.jackett.middlewares=authelia@docker"
      - "traefik.enable=true"
    restart: unless-stopped

  joal:
    build: seedbox/joal
    container_name: joal
    restart: unless-stopped
    network_mode: "service:vpn"
    volumes:
      - ./seedbox/joal/conf/torrents:/data/torrents
    command: ["--joal-conf=/data", "--spring.main.web-environment=true", "--server.port=4494", "--joal.ui.path.prefix=joal", "--joal.ui.secret-token=132465"]

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    network_mode: "service:vpn"
    volumes:
      - /data/torrent:/downloads
      - transmission-config:/config
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Paris
    networks:
      - seedbox-indexer
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett
    depends_on:
      - flaresolverr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - jackett-config:/config
      - jackett-downloads:/downloads
    network_mode: "service:vpn"
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Paris
    volumes:
      - sonarr-config:/config
      - /data:/data
    networks:
      - seedbox-indexer
      - proxy
      - seedbox-torrenting
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${BASE_DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr.middlewares=authelia@docker"
      - "traefik.enable=true"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Paris
    volumes:
      - radarr-config:/config
      - /data:/data
    networks:
      - seedbox-indexer
      - proxy
      - seedbox-torrenting
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.${BASE_DOMAIN}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr.middlewares=authelia@docker"
      - "traefik.enable=true"
    restart: unless-stopped
  plex:
    image: lscr.io/linuxserver/plex:latest
    environment:
      PUID: 1000
      PGID: 1000
      VERSION: docker
    volumes:
      - plex-config:/config
      - /data:/data
    networks:
      - proxy
    labels:
      - "traefik.http.routers.plex.rule=Host(`plex.${BASE_DOMAIN}`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=letsencrypt"
      - "traefik.enable=true"
    restart: unless-stopped
  transmission-exporter:
    # image: metalmatze/transmission-exporter
    build: transmission-exporter
    restart: always
    networks:
      - seedbox-metrics
    environment:
      TRANSMISSION_ADDR: http://vpn:9091
 
# ============================================================================ #
# ================================== SYNAPSE ================================= #
# ============================================================================ #
  synapse-database:
    image: postgres
    volumes:
      - synapse-database:/var/lib/postgresql/data
      - ./synapse/.pgpass:/root/.pgpass
    networks:
      - synapse-backend
    environment:
      POSTGRES_DB: synapse
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD_FILE: /root/.pgpass
      POSTGRES_INITDB_ARGS: --encoding=UTF8 --locale=C
    restart: unless-stopped

  synapse-app:
    image: matrixdotorg/synapse
    depends_on:
      - synapse-database
    volumes:
      - synapse-data:/data
    networks:
      - synapse-backend
      - proxy
    labels:
      - "traefik.http.routers.synapse.rule=Host(`matrix.${BASE_DOMAIN}`)"
      - "traefik.http.services.synapse.loadbalancer.server.port=8008"
      - "traefik.http.routers.synapse.tls=true"
      - "traefik.http.routers.synapse.tls.certresolver=letsencrypt"
      - "traefik.enable=true"
    restart: unless-stopped

# ============================================================================ #
# ================================== TRAEFIK ================================= #
# ============================================================================ #
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    environment:
      CONTAINERS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik
    restart: unless-stopped

  reverse-proxy:
    build: traefik
    depends_on:
      - authelia
    ports:
      - 80:80
      - 443:443
    environment:
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL: ${SYSTEM_EMAIL}
    networks:
      - proxy
      - traefik
    volumes:
      - traefik-acme:/etc/traefik/acme
    labels:
      - 'traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.${BASE_DOMAIN}%2F'
      - 'traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      - "traefik.http.routers.traefik.rule=Host(`proxy.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=authelia@docker"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.enable=true"
    restart: unless-stopped

# ============================================================================ #
# ==================================== WEB =================================== #
# ============================================================================ #
  web:
    build: web
    networks:
      - proxy
    labels:
      - "traefik.http.routers.web.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.enable=true"
    restart: unless-stopped

# ============================================================================ #
# ================================= WIREGUARD ================================ #
# ============================================================================ #
  wireguard:
    image: weejewel/wg-easy
    depends_on:
      - reverse-proxy
    ports:
      - 51820:51820/udp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
      net.ipv4.ip_forward: 1
    env_file:
      - .env
    environment:
      WG_HOST: "${HOST_IP}"
    volumes:
      - wireguard:/etc/wireguard
    networks:
      - proxy
    labels:
      - "traefik.http.routers.wireguard.rule=Host(`wireguard.${BASE_DOMAIN}`)"
      - "traefik.http.routers.wireguard.tls=true"
      - "traefik.http.routers.wireguard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wireguard.middlewares=authelia@docker"
      - "traefik.http.services.wireguard.loadbalancer.server.port=51821"
      - "traefik.enable=true"
    restart: unless-stopped

volumes:
  authelia-database:
  grafana-data:
  nextcloud-data:
  nextcloud-database:
  jackett-config:
  jackett-downloads:
  jellyfin-config:
  plex-config:
  sonarr-config:
  radarr-config:
  synapse-data:
  synapse-database:
  traefik-acme:
  transmission-config:
  wireguard:

networks:
  authelia-backend:
  metrics:
  proxy:
  nextcloud-backend:
  seedbox-indexer:
  seedbox-metrics:
  seedbox-torrenting:
  synapse-backend:
  traefik:

secrets:
  JWT_SECRET:
    file: ./authelia/secrets/JWT_SECRET
  NOTIFIER_PASSWORD:
    file: ./authelia/secrets/NOTIFIER_PASSWORD
  SESSION_SECRET:
    file: ./authelia/secrets/SESSION_SECRET
  STORAGE_PASSWORD:
    file: ./authelia/secrets/STORAGE_PASSWORD
  STORAGE_ENCRYPTION_KEY:
    file: ./authelia/secrets/STORAGE_ENCRYPTION_KEY
